swagger: "2.0"
host: xnodeapis.herokuapp.com
info: 
 title: XNODE API
 description: API FOR XNODE SERVICES
 version: 1.0
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

paths:
 /auth/signup:
  post:
   summary: Create a new user
   tags:
    - Authentication
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: User
     schema:
      $ref: "#/components/schemas/User"
      
   responses:
    200:
     description: User created
     schema:
      type: object
      properties: 
       success:
        type: boolean
        example: true
       message:
        type: string
        example: "message"
       token:
        type: string
        example: "token"
      
    401:
     description: User was not created
    500:
     description: User was not created too

 /auth/login:
  post:
   summary: Login a user
   tags:
    - Authentication
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: User
     schema:
      type: object
      properties: 
       username:
        type: string
       password:
        type: string
      
   responses:
    200:
     description: User Logged in
     schema:
      type: object
      properties: 
       success:
        type: boolean
        example: true
       message:
        type: string
        example: "message"
       token:
        type: string
        example: "token"
      
    401:
     description: Login error
     schema:
      type: object
      properties: 
       message:
        type: string
        example: "message"
      
       
    500:
     description: Login error
     schema:
      type: object
      properties: 
       message:
        type: string
        example: "message"

 
 /passwordReset:
  post:
   summary: Reset user's password
   tags:
    - Authentication
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: User
     schema:
      type: object
      properties: 
       email:
        type: string
      
      
   responses:
    200:
     description: Password reset successful
     schema:
      type: object
      properties: 
       success:
        type: boolean
        example: true
       message:
        type: string
        example: "message"
       
      
    401:
     description: Email is not found
     schema:
      type: string
      example: "email not found"
      
           
    500:
     description: Server error
     schema:
      type: string
      example: "server eror"


 /passwordReset/{userId}/{token}:
  post:
   summary: change the user password
   tags:
    - Authentication 
   description: changed users password
   security:
    - Bearer: []
   parameters:
     - name: userId
       in: path
       required: true
       schema:
        type: string
     - name: token
       in: path
       required: true
       schema:
        type: string
      
   responses:
    200:
     description: Success
     schema:
      type: object
      properties: 
       success:
        type: boolean
        example: true
       message:
        type: string
        example: "message"

    401:
     description:  Invalid link
    404:
     description:  Password change failure
    500:
     description:  Internal server error
 
 /link/:
  get:
   summary: get the links of the user
   tags:
    - Links
   description: get all the links
   security:
    - Bearer: []
    
   responses: 
    200:
     description: Success
    401:
     description:  Error getting the links
    500:
     description:  Internal server error

 /link/create/:
  post:
   summary: create a link
   security:
    - Bearer: []
   tags:
    - Links
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: User
     schema:
      type: object
      properties: 
       linkUrl:
        type: string
       description:
        type: string
      
   responses:
    200:
     description: New link added
    401:
     description: adding Link error
    500:
     description: internal server error

 /link/{id}:
  get:
   summary: get a link
   tags:
    - Links
   description: get a particular link
   security:
    - Bearer: []
   parameters:
     - name: id
       in: path
       required: true
       schema:
        type: string
    
   responses: 
    200:
     description: Success
    401:
     description:  Error getting the link
    500:
     description:  Internal server error

  
 /link/update/{id}:
  put:
   summary: update a link
   security:
    - Bearer: []
   tags:
    - Links
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: path
     name: id
     required: true
       schema:
        type: integer
   - in: body
     name: User
     schema:
      type: object
      properties: 
       linkUrl:
        type: string
       description:
        type: string
      
   responses:
    200:
     description: New link updated
    401:
     description: updating Link error
    500:
     description: internal server error

 /link/delete/{id}:
  delete:
   summary: delete a link
   tags:
    - Links
   description: delete a particular link of the user
   security:
    - Bearer: []
   parameters:
     - name: id
       in: path
       required: true
       schema:
        type: string
    
   responses: 
    200:
     description: Success
    401:
     description:  Error deleying the link
    500:
     description:  Internal server error  

 /Qrcode/generate/:
  get:
   summary: generate qrcode for a new user
   tags:
    - QRCode
   description: generate qrcode for the new user
   security:
    - Bearer: []
    
   responses: 
    200:
     description: Success
    401:
     description:  Error generating the qrcode
    500:
     description:  Internal server error

 /Qrcode/profile/:
  get:
   summary: get user profile via qrcode
   tags:
    - QRCode
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: Qrcode
     schema:
      type: object
      properties: 
       token:
        type: string
       
      
   responses:
    200:
     description: User profile gotten
    401:
     description: could not get user's profile via qr code
    500:
     description: internal server error

 /Qrcode/code/:
  get:
   summary: get the qrcode for the user
   tags:
    - QRCode
   description: get the particular qrcode for the user
   security:
    - Bearer: []
    
   responses: 
    200:
     description: Success
    401:
     description:  Error getting the qrcode
    500:
     description:  Internal server error
 
 /profile/addPhoto:
  put:
   summary: add profile photo
   description: adding profile photo
   tags:
    - Profile
   consumes:
    - multipart/form-data
   security:
    - Bearer: []
   parameters:
    - in: formData
      name: file
      type: file
      required: true
      description: File Upload
   responses:
    200:
     description: File successfully uploaded
    401:
     description: error uploading file
    500:
     description: internal server error  

 /profile/getProfilePhoto:
  get:
   summary: get profile photo for the user
   tags:
    - Profile
   description: get the particular profile photo for the user
   security:
    - Bearer: []
    
   responses: 
    200:
     description: Success
    401:
     description:  Error getting the profile photo
    500:
     description:  Internal server error


 /profile/getProfile:
  get:
   summary: get profile for the user
   tags:
    - Profile
   description: get the particular profile for the user
   security:
    - Bearer: []
    
   responses: 
    200:
     description: Success
    401:
     description:  Error getting the profile
    500:
     description:  Internal server error

 /profile/setPin:
  put:
   summary: set user's pin
   security:
    - Bearer: []
    
   tags:
    - Profile
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: Profile
     schema:
      type: object
      properties: 
       pin:
        type: string
       
      
   responses:
    200:
     description: User pin set
    401:
     description: could not set user's pin
    500:
     description: internal server error

 /profile/verifyPin:
  post:
   summary: verify user's pin
   security:
    - Bearer: []
    
   tags:
    - Profile
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: Profile
     schema:
      type: object
      properties: 
       pin:
        type: string
       
      
   responses:
    200:
     description: User pin verified
    401:
     description: could not verify user's pin
    500:
     description: internal server error


 /wallet/transferByUsername:
  post:
   summary: Transfer money to another user's wallet via username
   security:
    - Bearer: []
    
   tags:
    - Wallet
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: Wallet
     schema:
      type: object
      properties: 
       username:
        type: string
       amount:
        type: string
      
   responses:
    200:
     description: Transferred successfully
    401:
     description: Transfer failed
    500:
     description: Internal server error

 /wallet/create:
  post:
   summary: create wallet for user
   tags:
    - Wallet
   description: create a new wallet
   security:
    - Bearer: []
    
   responses: 
    200:
     description: Success
    401:
     description:  Error not creating new wallet
    500:
     description:  Internal server error
     
 /wallet/balance:
  get:
   summary: get wallet balance for user
   tags:
    - Wallet
   description: get wallet balance for user
   security:
    - Bearer: []
    
   responses: 
    200:
     description: Success
    401:
     description:  Error for not getting wallet balance
    500:
     description:  Internal server error

 /wallet/transferByQrcode:
  post:
   summary: Transfer money to another user's wallet via qrcode
   security:
    - Bearer: []
    
   tags:
    - Wallet
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: Wallet
     schema:
      type: object
      properties: 
       token:
        type: string
       amount:
        type: string
      
   responses:
    200:
     description: Transferred successfully
    401:
     description: Transfer failed
    500:
     description: Internal server error

 /wallet/topup:
  post:
   summary: Topup user's wallet
   security:
    - Bearer: []
    
   tags:
    - Wallet
   produces: 
    - application/json
   consumes:
    - application/json
   parcameters:
   - in: body
     name: Wallet
     schema:
      type: object
      properties: 
       amount:
        type: string
      
   responses:
    200:
     description: TOPUP successful
    401:
     description: Topup failed
    500:
     description: Internal server error

 /wallet/withdraw:
  post:
   summary: Withdraw user's wallet
   security:
    - Bearer: []
    
   tags:
    - Wallet
   produces: 
    - application/json
   consumes:
    - application/json
   parameters:
   - in: body
     name: Wallet
     schema:
      type: object
      properties: 
       amount:
        type: string
      
   responses:
    200:
     description: Withdraw successful
    401:
     description: withdraw failed
    500:
     description: Internal server error
     
     





components: 
 securitySchemes:
  BearerAuth:
   type: http
   scheme: bearer
 schemas:
  User:
   type: object
   properties: 
    firstName:
     type: string
     required: true
    lastName:
     type: string
     required: true
    email:
     type: string
     required: true
    username:
     type: string
     required: true
    password:
     type: string
     required: true
